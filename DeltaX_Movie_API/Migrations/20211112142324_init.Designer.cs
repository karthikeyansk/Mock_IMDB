// <auto-generated />
using System;
using DeltaX_Movie_API.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeltaX_Movie_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211112142324_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeltaX_Movie_API.Model.Actor", b =>
                {
                    b.Property<int>("actorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("actorId");

                    b.ToTable("actor");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.Movie", b =>
                {
                    b.Property<int>("movieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("producerId")
                        .HasColumnType("int");

                    b.HasKey("movieid");

                    b.HasIndex("producerId");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.MovieCast", b =>
                {
                    b.Property<int>("castId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("actorid")
                        .HasColumnType("int");

                    b.Property<int>("movieId")
                        .HasColumnType("int");

                    b.HasKey("castId");

                    b.HasIndex("actorid");

                    b.HasIndex("movieId");

                    b.ToTable("movieCasts");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.Producer", b =>
                {
                    b.Property<int>("producerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("producerId");

                    b.ToTable("producers");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.Movie", b =>
                {
                    b.HasOne("DeltaX_Movie_API.Model.Producer", "producer")
                        .WithMany("movies")
                        .HasForeignKey("producerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producer");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.MovieCast", b =>
                {
                    b.HasOne("DeltaX_Movie_API.Model.Actor", "actor")
                        .WithMany("movieCast")
                        .HasForeignKey("actorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeltaX_Movie_API.Model.Movie", "movie")
                        .WithMany("moviecast")
                        .HasForeignKey("movieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("actor");

                    b.Navigation("movie");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.Actor", b =>
                {
                    b.Navigation("movieCast");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.Movie", b =>
                {
                    b.Navigation("moviecast");
                });

            modelBuilder.Entity("DeltaX_Movie_API.Model.Producer", b =>
                {
                    b.Navigation("movies");
                });
#pragma warning restore 612, 618
        }
    }
}
